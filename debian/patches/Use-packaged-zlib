Description: Use systrem zlib
 Don't download a random zlib, dynamically link against the OS provided version 
--- plink-ng-1.90~b3.orig/Makefile
+++ plink-ng-1.90~b3/Makefile
@@ -1,97 +1,62 @@
-# This is a bit of a mess.  Work with Makefile.std instead.
+# General-purpose Makefile for PLINK 1.90
+#
+# Compilation options:
+#   Do not link to LAPACK                    NO_LAPACK
+
+# Leave blank after "=" to disable; put "= 1" to enable
+# (when enabled, "#define NOLAPACK" must be uncommented in plink_common.h)
+NO_LAPACK =
+
+
+# should autodetect system
+SYS = UNIX
+ifdef SystemRoot
+  SYS = WIN
+else
+  UNAME := $(shell uname)
+  ifeq ($(UNAME), Darwin)
+    SYS = MAC
+  endif
+endif
 
 CFLAGS=-Wall -O2
 BLASFLAGS=-L/usr/lib64/atlas -llapack -lcblas -latlas
-BLASFLAGS64=-L/usr/lib64/atlas -llapack -lcblas -latlas
 LINKFLAGS=-lm -lpthread
-ZLIB=zlib-1.2.8/libz.so.1.2.8
-ARCH64=-arch x86_64
+ZLIB=-lz
 
-UNAME := $(shell uname)
-ifeq ($(UNAME), Darwin)
+ifeq ($(SYS), MAC)
   GCC_GTEQ_43 := $(shell expr `g++ -dumpversion | sed -e 's/\.\([0-9][0-9]\)/\1/g' -e 's/\.\([0-9]\)/0\1/g' -e 's/^[0-9]\{3,4\}$$/&00/'` \>= 40300)
   ifeq "$(GCC_GTEQ_43)" "1"
     CFLAGS=-Wall -O2 -flax-vector-conversions
   endif
   BLASFLAGS=-framework Accelerate
-  BLASFLAGS64=-framework Accelerate
   LINKFLAGS=
+  ZLIB=zlib-1.2.8/libz.1.2.8.dylib
+endif
+
+ifeq ($(SYS), WIN)
+# Note that, unlike the Linux and Mac build processes, this STATICALLY links
+# LAPACK, since we have not gotten around to trying dynamically-linked LAPACK
+# on Windows.
+# If you don't already have LAPACK built, you'll probably want to turn on
+# NO_LAPACK.
+  BLASFLAGS=-L. lapack/liblapack.a -L. lapack/librefblas.a
+  LINKFLAGS=-lm -static-libgcc
   ZLIB=zlib-1.2.8/libz.a
-  ZLIB64=zlib-1.2.8/libz-64.a
-else
-  ifeq ($(UNAME), MINGW32_NT-6.2)
-    ARCH64=
-    BLASFLAGS=-Wl,-Bstatic -L. lapack/liblapack.a -L. lapack/librefblas.a
-    BLASFLAGS64=-Wl,-Bstatic -L. lapack/liblapack-64.a -L. lapack/librefblas-64.a
-    LINKFLAGS=-lm -static-libgcc
-    ZLIB=zlib-1.2.8/libz.a
-    ZLIB64=zlib-1.2.8/libz-64.a
-  endif
 endif
 
-SRC = plink.c plink_assoc.c plink_calc.c plink_cluster.c plink_cnv.c plink_common.c plink_data.c plink_dosage.c plink_family.c plink_filter.c plink_glm.c plink_help.c plink_homozyg.c plink_lasso.c plink_ld.c plink_matrix.c plink_misc.c plink_set.c plink_stats.c SFMT.c dcdflib.c pigz.c yarn.c
+ifdef NO_LAPACK
+  BLASFLAGS=
+endif
 
-OBJ = $(SRC:.c=.o)
+SRC = plink.c plink_assoc.c plink_calc.c plink_cluster.c plink_cnv.c plink_common.c plink_data.c plink_dosage.c plink_family.c plink_filter.c plink_glm.c plink_help.c plink_homozyg.c plink_lasso.c plink_ld.c plink_matrix.c plink_misc.c plink_set.c plink_stats.c SFMT.c dcdflib.c pigz.c yarn.c
 
-%.o: %.c
-	g++ -c $(CFLAGS) $(ARCH64) -o $@ $<
+# In the likely event that you are concurrently using PLINK 1.07, we suggest
+# either renaming that binary to "plink1" or this one to "plink2".
 
 plink: $(SRC)
-	g++ $(CFLAGS) $(SRC) -m32 -o plink $(BLASFLAGS) $(LINKFLAGS) -L. $(ZLIB)
+	g++ $(CFLAGS) $(SRC) -o plink $(BLASFLAGS) $(LINKFLAGS) -L. $(ZLIB)
 
 plinkw: $(SRC)
 	g++ $(CFLAGS) $(SRC) -c
-	gfortran -O2 $(OBJ) -o plink $(BLASFLAGS) $(LINKFLAGS) -L. $(ZLIB)
-
-plinkc: $(SRC)
-	gcc $(CFLAGS) $(SRC) -o plink $(BLASFLAGS64) $(LINKFLAGS) -L. $(ZLIB64)
-
-plinks: $(SRC)
-	g++ $(CFLAGS) $(SRC) -o plink_linux_s -Wl,-Bstatic $(BLASFLAGS) -Wl,-Bdynamic $(LINKFLAGS) -L. $(ZLIB)
-
-plinkd: $(SRC)
-	g++ $(CFLAGS) $(SRC) -o plink_linux $(BLASFLAGS) -Wl,-Bdynamic $(LINKFLAGS) -L. $(ZLIB)
-
-plinknl: $(SRC)
-	g++ $(CFLAGS) $(SRC) -o plink $(LINKFLAGS) -Wl,-Bstatic -L. $(ZLIB)
-
-plink64: $(OBJ)
-	g++ $(CFLAGS) $(ARCH64) $(OBJ) -o plink $(BLASFLAGS64) $(LINKFLAGS) -L. $(ZLIB64)
-# for clean build, "make clobber" first
-
-plink64w: $(SRC)
-	g++ $(CFLAGS) $(ARCH64) $(SRC) -c
-	gfortran -O2 $(OBJ) -o plink64 $(BLASFLAGS64) $(LINKFLAGS) -L. $(ZLIB64)
-
-plink64c: $(SRC)
-	gcc $(CFLAGS) $(ARCH64) $(SRC) -o plink $(BLASFLAGS64) $(LINKFLAGS) -L. $(ZLIB64)
-
-plink64nl: $(SRC)
-	g++ $(CFLAGS) $(ARCH64) $(SRC) -o plink $(LINKFLAGS) -L. $(ZLIB64)
-
-pigz_test: pigz_test.c pigz.c yarn.c
-	g++ -Wall -arch x86_64 -O2 pigz_test.c pigz.c yarn.c -o pigz_test -L. $(ZLIB64)
-
-prettify: prettify.c
-	gcc -Wall -arch x86_64 -O2 prettify.c -o prettify
-
-prettifyw: prettify.c
-	gcc -Wall -O2 prettify.c -o prettify
-
-dbl2txt: dbl2txt.c
-	gcc -Wall -arch x86_64 -O2 dbl2txt.c -o dbl2txt
-
-nsort: nsort.c
-	gcc -Wall -O2 nsort.c -o nsort
-
-interval_merge: interval_merge.c
-	gcc -Wall -O2 interval_merge.c -o interval_merge
-
-dose2plink32: dose2plink.c
-	g++ -Wall -O2 -lm -m32 dose2plink.c -o dose2plink -L. $(ZLIB)
-
-dose2plink: dose2plink.c
-	g++ -Wall -O2 -lm dose2plink.c -o dose2plink -L. $(ZLIB64)
-
-clobber:
-	rm -f *.o
+	gfortran -O2 $(OBJ) -o plink -Wl,-Bstatic $(BLASFLAGS) $(LINKFLAGS) -L. $(ZLIB)
--- plink-ng-1.90~b3.orig/Makefile.std
+++ plink-ng-1.90~b3/Makefile.std
@@ -22,7 +22,7 @@ endif
 CFLAGS=-Wall -O2
 BLASFLAGS=-L/usr/lib64/atlas -llapack -lcblas -latlas
 LINKFLAGS=-lm -lpthread
-ZLIB=zlib-1.2.8/libz.so.1.2.8
+ZLIB=-lz
 
 ifeq ($(SYS), MAC)
   GCC_GTEQ_43 := $(shell expr `g++ -dumpversion | sed -e 's/\.\([0-9][0-9]\)/\1/g' -e 's/\.\([0-9]\)/0\1/g' -e 's/^[0-9]\{3,4\}$$/&00/'` \>= 40300)
--- plink-ng-1.90~b3.orig/dose2plink.c
+++ plink-ng-1.90~b3/dose2plink.c
@@ -96,7 +96,7 @@
   #endif
 #endif
 
-#include "zlib-1.2.8/zlib.h"
+#include <zlib.h>
 
 #ifdef __APPLE__
   #include <sys/sysctl.h>
--- plink-ng-1.90~b3.orig/pigz.c
+++ plink-ng-1.90~b3/pigz.c
@@ -383,7 +383,7 @@ void parallel_compress(char* out_fname,
 #  include <sys/pstat.h>
 #endif
 
-#include "zlib-1.2.8/zlib.h" /* deflateInit2(), deflateReset(), deflate(), */
+#include <zlib.h> /* deflateInit2(), deflateReset(), deflate(), */
                         /* deflateEnd(), deflateSetDictionary(), crc32(),
                            inflateBackInit(), inflateBack(), inflateBackEnd(),
                            Z_DEFAULT_COMPRESSION, Z_DEFAULT_STRATEGY,
--- plink-ng-1.90~b3.orig/plink_common.h
+++ plink-ng-1.90~b3/plink_common.h
@@ -139,7 +139,7 @@
 
 #endif // __LP64__
 
-#include "zlib-1.2.8/zlib.h"
+#include <zlib.h>
 #include "SFMT.h"
 
 // 64MB of non-workspace memory guaranteed for now
